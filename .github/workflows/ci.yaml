on:
  push:
    branches:
      - main
  pull_request:

env:
  appDockerRegistry: 'apinityapxcr.azurecr.io'
  appDockerImage: 'apx/bfi'

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Semantic Versioning
        uses: PaulHatch/semantic-version@v5.0.0-beta
        id: versioning
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(BREAKING CHANGE:)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "feat:"
          # A string to determine the format of the version output
          version_format: "${major}.${minor}.${patch}-prerelease${increment}"
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false
          # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
          search_commit_body: false

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.3.3
        with:
          arguments: build